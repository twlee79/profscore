Sequence analysis of antithrombin orthologues
=============================================

.. contents::
.. footer:: Tet Woo Lee 2014-04

General information
-------------------

The input alignment ``example/antithrombin/all sequences + A1AT.fasta`` contains a multiple sequence alignment of 57 sequences: 16 antithrombin, 11 neuroserpin, 11 GDN, 8 pancpin, 10 PAI-1 and human alpha-1-antitrypsin. In the following example, conservation scores and consensus residues are calculated for the 16 antithrombin sequences and compared to the neuroserpin, GDN, pancpin and PAI-1 sequences. Human alpha-1-antitrypsin is used to generate the residue numbering to compare to the results from `Irving et al., 2000`_ only. The full alignment can be used in all steps as the script provides options to select a subset of sequences when performing analyses. 

.. _`Irving et al., 2000`: http://www.ncbi.nlm.nih.gov/pubmed/11116082

By default, the script will calculate profile-based conservation scores using the `Valdar and Thornton, 2001`_ matrix, which is a transformed PET91 matrix in the range of [0.0-1.0] with a constant diagonal (see also `Valdar, 2002`_). Gaps are given the score 0.0.

.. _`Valdar and Thornton, 2001`: http://www.ncbi.nlm.nih.gov/pubmed/11093265
.. _`Valdar, 2002`: http://www.ncbi.nlm.nih.gov/pubmed/12112692

Example reports produced as output for each of these steps are provided together with this file. Note that the *p*-values generated by (re)running the commands here will not be identical to the example files as these are generated by randomization.

Determining of conservation scores, consensus residues and *p*-values for antithrombin sequences
------------------------------------------------------------------------------------------------

Command: 

  ``profscore.py "example/antithrombin/all sequences + A1AT.fasta" -s "ANT3_" -c 0.7 --rndsubset "(ANT3|NS|GDN|PP|PAI1)_" -n 10000 -p "example/antithrombin/rand10000_for_ant.csv" -r ANT3_HUMAN --numstart "-32" --outsubset "(ANT3|NS|GDN|PP|PAI1)_" -o "example/antithrombin/profscore_ant.csv"``

Using the full multiple sequence alignment (``example/antithrombin/all sequences + A1AT.fasta``), the profile-based conservation score (default) is used to calculate conservation scores for antithrombin sequences (selected with ``-s "ANT3_"``) with consensus residues determined to be those with consensus scores of ≥ 0.7 in the sequence profile (``-c 0.7``). To determine *p*-values, conservation scores are calculated for a random sample of 16 sequences (the same number as antithrombin sequences selected) from the alignment of antithrombin, neuroserpion, GDN, pancpin and PAI-1 sequences (selected with ``--rndsubset "(ANT3|NS|GDN|PP|PAI1)_"``) and this is repeated 10,000 times (``-n 10000``); at each site, the *p*-value is calculated as the proportion of randomizations giving conservation scores at least as high as in the antithrombin sequences. Results of the randomizations must be saved to file during processing, and the file ``example/antithrombin/rand10000_for_ant.csv`` (``-p "example/antithrombin/rand10000_for_ant.csv"``) is used for this. To produce a report, human antithrombin is used as the reference sequence for numbering (``-r ANT3_HUMAN``) with the first human antithrombin residue numbered -32 (``--numstart "-32"``) to give the commonly used numbering scheme for antithrombin (residue 1 is the first residue in the mature protein with the signal peptide negatively numbered). The sequences of antithrombin, neuroserpin, GDN, pancpin and PAI1 (``--outsubset "(ANT3|NS|GDN|PP|PAI1)_"``) are added to the report for reference. The output report is saved to the file ``example/antithrombin/profscore_ant.csv`` (``-o "example/antithrombin/profscore_ant.csv"``). This report contains selected sequences, conservation scores, consensus residues and *p*-values at each site in antithrombin.


Determining of consensus residues of non-antithrombin sequences
---------------------------------------------------------------

Command:

  ``profscore.py "example/antithrombin/all sequences + A1AT.fasta" -s "(NS|GDN|PP|PAI1)_" -c 0.7 --outsubset "(ANT3|NS|GDN|PP|PAI1)_" -r ANT3_HUMAN --numstart "-32" -o "example/antithrombin/profscore_ns+gdn+pp+pai_antnum.csv"``

Using the full multiple sequence alignment (``example/antithrombin/all sequences + A1AT.fasta``), the profile-based conservation score (default) is used to calculate conservation scores for relevant non-antithrombin sequences (selected with ``-s "(NS|GDN|PP|PAI1)_"``) with consensus residues determined to be those with consensus scores of ≥ 0.7 in the sequence profile (``-c 0.7``). A report is produced with antithrombin sequences as well, human antithrombin for numbering (``-r ANT3_HUMAN --numstart "-32" --outsubset "(ANT3|NS|GDN|PP|PAI1)_"``) and written to the file ``example/antithrombin/profscore_ns+gdn+pp+pai_antnum.csv`` (``-o "example/antithrombin/profscore_ns+gdn+pp+pai_antnum.csv"``). As this report has the same numbering as the file generated above for antithrombin, the columns from the report that give the consensus residues for non-antithrombin sequences can be copied to the first report and compared with those from antithrombin.


Generating a comparison of alpha-1-antitrypsin numbering to antithrombin numbering
----------------------------------------------------------------------------------

First:

  ``profscore.py "example/antithrombin/all sequences + A1AT.fasta" --outpos ALL -r A1AT_HUMAN --numstart "-24" -o "example/antithrombin/profscore_all_a1atnum.csv"``
  
Using the full multiple sequence alignment (``example/antithrombin/all sequences + A1AT.fasta``), produce a report with all positions in the alignment (``--outpos ALL``), alpha-1-antitrypsin as the reference sequence for numbering (``-r A1AT_HUMAN``) and numbering starting from -24 to account for the signal peptide (``--numstart "-24"``), writing to the file ``example/antithrombin/profscore_all_a1atnum.csv`` (``-o "example/antithrombin/profscore_all_a1atnum.csv"``). This produces a report with numbering in the "report num" column according to human alpha-1-antitrypsin, with residue 1 starting from the first amino acid in the mature (non-pre) protein, as used in `Irving et al., 2000`_. 

Second:

  ``profscore.py "example/antithrombin/all sequences + A1AT.fasta" --outpos ALL -r ANT3_HUMAN --numstart "-32" -o "example/antithrombin/profscore_all_antnum.csv"``

Produce a similar report but with numbering using human antithrombin as the reference sequence for numbering (``-r ANT3_HUMAN --numstart "-32"``). This produces a report with numbering in the "report num" column according to human antithrombin, with residue 1 being the first residue in the antithrombin precursor (including the signal peptide), the same numbering scheme used in previous steps above.

The "report num" column from the two files can then be compared to show human antithrombin numbering versus alpha-1-antitrypsin numbering.

Additional information
----------------------

As a comparison, the file ``example/antithrombin/scorecons_ant_antnum.csv`` gives the Valdar sequence conservation scores calculated using the |scorecons server|_ (``valdar01`` method, ``modified PET91`` matrix, gaps ``0``) with the same numbering as in ``example/antithrombin/profscore_ant.csv``. These are identical to the profile-based conservation scores calculated with the ``profscore.py`` script within the precision of the *scorecons* output (0.001).

.. _scorecons server: https://www.ebi.ac.uk/thornton-srv/databases/cgi-bin/valdar/scorecons_server.pl
.. |scorecons server| replace:: *scorecons* server

See the neuroserpin example for information on additional randomization and scoring options.

Calculation of solvent-accessible surface area
----------------------------------------------

In PyMol, open PDB file ``2ANT`` (downloaded from the PDB_ database) and use the ``pymol_calc_accessibility.py`` script by running these commands (``<script path>`` should be replaced by the path containing the script file on the local file system)::

  remove not chain i
    # delete all except chain i = intact antithrombin
  set_name 2ANT, 2ANT-i
    # rename object to 2ANT-i to include chain name
  cd <script path>
    # change directory to script location
  run pymol_calc_accessibility.py
    # install script
  calc_accessibility_all(dot_solvent = 1, dot_density = 4)
    # run script

.. _PDB: http://www.rcsb.org/

This will calculate the solvent-accessible surface area for each residue in the object ``2ANT-i`` and write these data to the file ``2ANT-i_accessibility.csv`` in the current directory (script path if above commands used). The surface area for a residue is calculated for all atoms and for side-chain atoms only; side-chain atoms exclude the main-chain carbonyl and amino atoms for all amino acids and exclude the alpha carbon for all amino acids except glycine. The data file contains the following data columns:

===========    ======================================
column         description
===========    ======================================
``model``      pymol object name
``resi``       residue identifier (number)
``resn``       residue name
``sc_acc``     surface area of side-chain atoms in Å²
``all_acc``    surface area of all atoms in Å²
===========    ======================================

The residue numbering of the PDB file is identical to that used in ``example/antithrombin/profscore_ant.csv`` so the solvent-accessible surface area for each residue can be combined with the conservation data.

